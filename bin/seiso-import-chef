#!/usr/bin/env ruby
# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'optparse'
require 'yaml'
require 'seiso/import_chef'

# Imports Chef Server nodes into Seiso as machines.
#
# Author:: Willie Wheeler
# Copyright:: Copyright (c) 2014-2016 Expedia, Inc.
# License:: Apache 2.0

log = Seiso::ImportChef::Util::Logger.new "seiso-import-chef"

options = {}
option_parser = OptionParser.new do |opts|
  executable_name = File.basename $PROGRAM_NAME
  opts.banner = "Import Chef server nodes into Seiso as machines.

Usage: #{executable_name} [options]"
  options[:chef_settings_path] = "#{Dir.home}/.seiso-importers/chef.yml"
  opts.on("--chef=CHEF_SETTINGS_PATH", "Path to Chef server settings file") do |path|
    options[:chef_settings_path] = path
  end

  options[:seiso3_settings_path] = "#{Dir.home}/.seiso-importers/seiso3.yml"
  opts.on("--seiso3=SEISO3_SETTINGS_PATH", "Path to Seiso API v3 settings file") do |path|
    options[:seiso3_settings_path] = path
  end

  opts.on("-h", "--help", "Display this screen") do
    puts opts
    exit
  end
end

begin
  option_parser.parse!
rescue OptionParser::InvalidOption => e
  log.error "Invalid option."
  puts option_parser.help
  abort
end

log.info "Using: #{options[:chef_settings_path]}"
log.info "Using: #{options[:seiso3_settings_path]}"

chef_settings = YAML.load_file(options[:chef_settings_path])
seiso3_settings = YAML.load_file(options[:seiso3_settings_path])

importer = Seiso::ImportChef.build(chef_settings, seiso3_settings)
success = importer.import_all
if success
  log.success "Import succeeded."
else
  log.error "Import failed."
end